name: escalapp

services:
  db:
    image: postgres:15
    container_name: escalapp-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: escalapp
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d escalapp"]
      interval: 5s
      timeout: 5s
      retries: 30

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: escalapp-web
    restart: unless-stopped
    env_file:
      - .env
      - .env.local
    environment:
      # Controla si se ejecutan seeds al arrancar (por defecto, NO)
      SEED_ON_START: ${SEED_ON_START:-false}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    command: >
      sh -c "
        npx prisma generate &&
        npx prisma migrate deploy &&
        if [ \"${SEED_ON_START}\" = \"true\" ]; then npm run db:seed; fi &&
        npm run dev
      "

  # Servicio opcional para sembrar datos bajo demanda
  # Se ejecuta SOLO si indicas el profile 'seed'
  init-db:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
      - .env.local
    volumes:
      - .:/app
      - /app/node_modules
    command: >
      sh -c "
        npx prisma generate &&
        npx prisma migrate deploy &&
        npm run db:seed
      "
    profiles: ["seed"]
    restart: "no"

volumes:
  pgdata:
